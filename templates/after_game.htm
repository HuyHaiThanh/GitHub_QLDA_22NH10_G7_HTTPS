<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Kết thúc trò chơi - Caro Game</title>
    <link
      rel="stylesheet"
      href="{{ url_for('static', filename='css/style.css') }}"
    />
    <style>
      .after-game-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        background-color: #14202e;
      }

      .game-result-box {
        background-color: #1c2c40;
        border-radius: 15px;
        padding: 30px;
        text-align: center;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
        max-width: 500px;
        width: 90%;
      }

      .game-logo {
        margin-bottom: 20px;
      }

      .game-logo img {
        width: 80px;
        height: 80px;
      }

      .result-info {
        margin-bottom: 30px;
      }

      .winner-display {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-bottom: 20px;
      }

      .winner-display h2 {
        font-size: 28px;
        margin-bottom: 15px;
        color: #14cca8;
      }

      .winner-avatar {
        width: 100px; /* Giảm kích thước avatar */
        height: 100px; /* Giảm kích thước avatar */
        border-radius: 50%;
        overflow: hidden;
        border: 3px solid #14cca8;
        margin-bottom: 15px;
      }

      .ai-win h2 {
        color: #ff5050;
      }

      .ai-win .winner-avatar {
        border-color: #ff5050;
      }

      .opponent-win h2 {
        color: #ff5050; /* Red color for opponent win title */
      }

      .opponent-win .winner-avatar {
        border-color: #ff5050; /* Red border for opponent avatar */
      }

      .winner-avatar img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

      .after-game-controls {
        display: flex;
        justify-content: center;
        gap: 15px;
      }

      .btn {
        padding: 10px 20px;
        border-radius: 5px;
        font-weight: bold;
        text-decoration: none;
        display: inline-block;
        transition: all 0.3s ease;
      }

      .primary-btn {
        background-color: #14cca8;
        color: white;
      }

      .secondary-btn {
        background-color: #2a3a51;
        color: white;
      }

      .key-hint {
        display: inline-block;
        background-color: rgba(255, 255, 255, 0.2);
        border-radius: 3px;
        padding: 2px 5px;
        margin-left: 5px;
        font-size: 12px;
      }
    </style>
  </head>
  <body>
    <div class="after-game-container">
      <div class="game-result-box">
        <div class="game-logo">
          <img
            src="{{ url_for('static', filename='images/logo.png') }}"
            alt="Caro Game Logo"
          />
        </div>

        <div class="result-info">
          {% if game.status == 'cancelled' %}
          <div class="cancelled-display">
            <h2>Trò chơi đã kết thúc</h2>
            <p>Trò chơi đã bị hủy</p>
          </div>
          {% elif game.winner_id == user.user_id %} {# User is the winner
          (covers PvE and PvP if game.winner_id is set for PvP user win) #}
          <div class="winner-display">
            <h2>Chúc mừng!</h2>
            <div class="winner-avatar">
              <img src="{{ user.avatar }}" alt="Avatar của bạn" />
            </div>
            <p>Bạn đã chiến thắng!</p>
          </div>
          {% elif game.winner_id is none and game.status == 'finished' %} {# AI
          is the winner (PvE context) #}
          <div class="winner-display ai-win">
            <h2>Rất tiếc!</h2>
            <div class="winner-avatar">
              <img
                src="{{ url_for('static', filename='images/robot_avatar.png') }}"
                alt="AI"
              />
            </div>
            <p>AI đã chiến thắng!</p>
          </div>
          {% elif winner %} {# 'winner' object exists, implies PvP game
          concluded with a specific winner, not caught by game.winner_id #} {%
          if winner.user_id == user.user_id %} {# PvP User Win, if 'winner'
          object is primary and game.winner_id wasn't set #}
          <div class="winner-display">
            <h2>Chúc mừng!</h2>
            <div class="winner-avatar">
              {# Use winner.avatar if available, fallback to user.avatar for
              consistency #}
              <img
                src="{{ winner.avatar if winner.avatar else user.avatar }}"
                alt="Avatar của bạn"
              />
            </div>
            <p>Bạn đã chiến thắng!</p>
          </div>
          {% else %} {# PvP Opponent Win (winner.user_id != user.user_id) #}
          <div class="winner-display opponent-win">
            <h2>Rất tiếc!</h2>
            <div class="winner-avatar">
              <img
                src="{{ winner.avatar if winner.avatar else url_for('static', filename='images/default_avatar.png') }}"
                alt="Avatar đối thủ"
              />
            </div>
            <p>{{ winner.displayName }} đã chiến thắng!</p>
          </div>
          {% endif %} {% elif game.status == 'finished' %} {# Game is finished,
          no game.winner_id, no AI win, no 'winner' object -> Draw #}
          <div class="winner-display">
            <h2>Trò chơi hòa</h2>
            <p>Trận đấu kết thúc không có người thắng.</p>
          </div>
          {% else %} {# Fallback for any other unhandled scenario #}
          <div class="winner-display">
            <h2>Kết thúc trò chơi</h2>
            <p>Trò chơi đã kết thúc.</p>
          </div>
          {% endif %}
        </div>

        <div class="after-game-controls">
          <a
            href="{{ url_for('after_game.replay', game_id=game.game_id) }}"
            class="btn primary-btn"
          >
            Chơi lại
            <span class="key-hint">↵ Enter</span>
          </a>
          <a
            href="{{ url_for('after_game.leave_room', game_id=game.game_id) }}"
            class="btn secondary-btn"
          >
            Về trang chủ
            <span class="key-hint">Esc</span>
          </a>
        </div>
      </div>
    </div>

    <script>
      // Handle keyboard shortcuts
      document.addEventListener("keydown", function (event) {
        if (event.key === "Enter") {
          window.location.href =
            "{{ url_for('after_game.replay', game_id=game.game_id) }}";
        } else if (event.key === "Escape") {
          window.location.href =
            "{{ url_for('after_game.leave_room', game_id=game.game_id) }}";
        }
      });
    </script>
    <script>
      // SocketIO for game restart
      const socket = io();
      const currentRoomCodeForNotifications = "{{ game.room_code }}";

      socket.on("connect", () => {
        console.log("Connected to SocketIO server from after_game page.");
        socket.emit("join_after_game_notifications", {
          room_code: currentRoomCodeForNotifications,
        });
      });

      socket.on("game_restart", function (data) {
        console.log("Game restart event received on after_game page", data);
        // The client is in the old game's notification room.
        // If it receives 'game_restart', it's for this client.
        // data.room_code is the NEW room to join.
        document.cookie = `game_id=${data.new_game_id};path=/;max-age=${
          60 * 60 * 24
        }`;
        window.location.href =
          "{{ url_for('pvp.pvp_game', room_code='') }}" + data.room_code;
      });
    </script>
  </body>
</html>
